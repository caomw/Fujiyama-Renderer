#nmake file generated by make_nmakefile.py
#Copyright (c) 2011-2014 Hiroshi Tsubokawa
#See LICENSE and README

INCLUDE_PATH = C:\include
LIBRARY_PATH = C:\lib

out_dir = bin
def_dir = def
tests_dir = tests

opt = /O2 /Oi /GL
warn = #/W3
macro = /D "NODEBUG"

CC = cl.exe
LD = link.exe
CFLAGS = /nologo $(opt) $(warn) $(macro) /fp:precise /MD /openmp /I..\../src /I$(INCLUDE_PATH) /c
LDFLAGS = /nologo /LTCG /LIBPATH:$(out_dir) /LIBPATH:C:\local\lib /LIBPATH:$(LIBRARY_PATH)
RM = del

.cc.obj:
	@$(CC) $(CFLAGS) /Fo$@ $<

.ccpp.obj:
	@$(CC) $(CFLAGS) /D "OPENEXR_DLL" /EHsc /Fo$@ $<

libscene_dll = $(out_dir)\libscene.dll
cube_exe = $(out_dir)\cube.exe
ConstantShader_dll = $(out_dir)\ConstantShader.dll
GlassShader_dll = $(out_dir)\GlassShader.dll
HairShader_dll = $(out_dir)\HairShader.dll
PlasticShader_dll = $(out_dir)\PlasticShader.dll
SSSShader_dll = $(out_dir)\SSSShader.dll
VolumeShader_dll = $(out_dir)\VolumeShader.dll
PointCloudsProcedure_dll = $(out_dir)\PointCloudsProcedure.dll
SplineWispsProcedure_dll = $(out_dir)\SplineWispsProcedure.dll
SurfaceWispsProcedure_dll = $(out_dir)\SurfaceWispsProcedure.dll
curvegen_exe = $(out_dir)\curvegen.exe
fb2exr_exe = $(out_dir)\fb2exr.exe
fbview_exe = $(out_dir)\fbview.exe
hdr2mip_exe = $(out_dir)\hdr2mip.exe
jpg2mip_exe = $(out_dir)\jpg2mip.exe
obj2mesh_exe = $(out_dir)\obj2mesh.exe
ply2mesh_exe = $(out_dir)\ply2mesh.exe
ptcgen_exe = $(out_dir)\ptcgen.exe
scene_exe = $(out_dir)\scene.exe
velgen_exe = $(out_dir)\velgen.exe
array_test_exe = $(out_dir)\array_test.exe
box_test_exe = $(out_dir)\box_test.exe
io_test_exe = $(out_dir)\io_test.exe
numeric_test_exe = $(out_dir)\numeric_test.exe
vector_test_exe = $(out_dir)\vector_test.exe

all: \
  $(libscene_dll) \
  $(cube_exe) \
  $(ConstantShader_dll) \
  $(GlassShader_dll) \
  $(HairShader_dll) \
  $(PlasticShader_dll) \
  $(SSSShader_dll) \
  $(VolumeShader_dll) \
  $(PointCloudsProcedure_dll) \
  $(SplineWispsProcedure_dll) \
  $(SurfaceWispsProcedure_dll) \
  $(curvegen_exe) \
  $(fb2exr_exe) \
  $(fbview_exe) \
  $(hdr2mip_exe) \
  $(jpg2mip_exe) \
  $(obj2mesh_exe) \
  $(ply2mesh_exe) \
  $(ptcgen_exe) \
  $(scene_exe) \
  $(velgen_exe) \
  $(array_test_exe) \
  $(box_test_exe) \
  $(io_test_exe) \
  $(numeric_test_exe) \
  $(vector_test_exe)

.PHONY: all clean check

#===============================================================================
# libscene.dll
libscene_dll_obj = \
  ..\..\src\fj_accelerator.obj \
  ..\..\src\fj_array.obj \
  ..\..\src\fj_box.obj \
  ..\..\src\fj_bvh_accelerator.obj \
  ..\..\src\fj_callback.obj \
  ..\..\src\fj_camera.obj \
  ..\..\src\fj_color.obj \
  ..\..\src\fj_curve.obj \
  ..\..\src\fj_curve_io.obj \
  ..\..\src\fj_file_io.obj \
  ..\..\src\fj_filter.obj \
  ..\..\src\fj_framebuffer.obj \
  ..\..\src\fj_framebuffer_io.obj \
  ..\..\src\fj_geometry.obj \
  ..\..\src\fj_grid_accelerator.obj \
  ..\..\src\fj_iff.obj \
  ..\..\src\fj_importance_sampling.obj \
  ..\..\src\fj_interval.obj \
  ..\..\src\fj_io.obj \
  ..\..\src\fj_light.obj \
  ..\..\src\fj_matrix.obj \
  ..\..\src\fj_mesh.obj \
  ..\..\src\fj_mesh_io.obj \
  ..\..\src\fj_mipmap.obj \
  ..\..\src\fj_multi_thread.obj \
  ..\..\src\fj_noise.obj \
  ..\..\src\fj_numeric.obj \
  ..\..\src\fj_object_group.obj \
  ..\..\src\fj_object_instance.obj \
  ..\..\src\fj_os.obj \
  ..\..\src\fj_plugin.obj \
  ..\..\src\fj_point_cloud.obj \
  ..\..\src\fj_point_cloud_io.obj \
  ..\..\src\fj_primitive_set.obj \
  ..\..\src\fj_procedure.obj \
  ..\..\src\fj_progress.obj \
  ..\..\src\fj_property.obj \
  ..\..\src\fj_random.obj \
  ..\..\src\fj_rectangle.obj \
  ..\..\src\fj_renderer.obj \
  ..\..\src\fj_sampler.obj \
  ..\..\src\fj_scene.obj \
  ..\..\src\fj_scene_interface.obj \
  ..\..\src\fj_shader.obj \
  ..\..\src\fj_shading.obj \
  ..\..\src\fj_string_function.obj \
  ..\..\src\fj_tex_coord.obj \
  ..\..\src\fj_texture.obj \
  ..\..\src\fj_tiler.obj \
  ..\..\src\fj_timer.obj \
  ..\..\src\fj_transform.obj \
  ..\..\src\fj_triangle.obj \
  ..\..\src\fj_turbulence.obj \
  ..\..\src\fj_vector.obj \
  ..\..\src\fj_volume.obj \
  ..\..\src\fj_volume_accelerator.obj \
  ..\..\src\fj_volume_filling.obj

libscene_lib = $(out_dir)\libscene.lib
libscene_exp = $(out_dir)\libscene.exp

$(libscene_dll): $(libscene_dll_obj)
	@echo libscene.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\libscene.def   $(libscene_dll_obj)

#===============================================================================
# cube.exe
cube_exe_obj = \
  ..\..\scenes\cube.obj

$(cube_exe): $(cube_exe_obj)
	@echo cube.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(cube_exe_obj)

#===============================================================================
# ConstantShader.dll
ConstantShader_dll_obj = \
  ..\..\shaders\constant_shader\constant_shader.obj

ConstantShader_lib = $(out_dir)\ConstantShader.lib
ConstantShader_exp = $(out_dir)\ConstantShader.exp

$(ConstantShader_dll): $(ConstantShader_dll_obj)
	@echo ConstantShader.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\ConstantShader.def  libscene.lib $(ConstantShader_dll_obj)

#===============================================================================
# GlassShader.dll
GlassShader_dll_obj = \
  ..\..\shaders\glass_shader\glass_shader.obj

GlassShader_lib = $(out_dir)\GlassShader.lib
GlassShader_exp = $(out_dir)\GlassShader.exp

$(GlassShader_dll): $(GlassShader_dll_obj)
	@echo GlassShader.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\GlassShader.def  libscene.lib $(GlassShader_dll_obj)

#===============================================================================
# HairShader.dll
HairShader_dll_obj = \
  ..\..\shaders\hair_shader\hair_shader.obj

HairShader_lib = $(out_dir)\HairShader.lib
HairShader_exp = $(out_dir)\HairShader.exp

$(HairShader_dll): $(HairShader_dll_obj)
	@echo HairShader.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\HairShader.def  libscene.lib $(HairShader_dll_obj)

#===============================================================================
# PlasticShader.dll
PlasticShader_dll_obj = \
  ..\..\shaders\plastic_shader\plastic_shader.obj

PlasticShader_lib = $(out_dir)\PlasticShader.lib
PlasticShader_exp = $(out_dir)\PlasticShader.exp

$(PlasticShader_dll): $(PlasticShader_dll_obj)
	@echo PlasticShader.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\PlasticShader.def  libscene.lib $(PlasticShader_dll_obj)

#===============================================================================
# SSSShader.dll
SSSShader_dll_obj = \
  ..\..\shaders\sss_shader\sss_shader.obj

SSSShader_lib = $(out_dir)\SSSShader.lib
SSSShader_exp = $(out_dir)\SSSShader.exp

$(SSSShader_dll): $(SSSShader_dll_obj)
	@echo SSSShader.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\SSSShader.def  libscene.lib $(SSSShader_dll_obj)

#===============================================================================
# VolumeShader.dll
VolumeShader_dll_obj = \
  ..\..\shaders\volume_shader\volume_shader.obj

VolumeShader_lib = $(out_dir)\VolumeShader.lib
VolumeShader_exp = $(out_dir)\VolumeShader.exp

$(VolumeShader_dll): $(VolumeShader_dll_obj)
	@echo VolumeShader.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\VolumeShader.def  libscene.lib $(VolumeShader_dll_obj)

#===============================================================================
# PointCloudsProcedure.dll
PointCloudsProcedure_dll_obj = \
  ..\..\procedures\pointclouds_procedure\pointclouds_procedure.obj

PointCloudsProcedure_lib = $(out_dir)\PointCloudsProcedure.lib
PointCloudsProcedure_exp = $(out_dir)\PointCloudsProcedure.exp

$(PointCloudsProcedure_dll): $(PointCloudsProcedure_dll_obj)
	@echo PointCloudsProcedure.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\PointCloudsProcedure.def  libscene.lib $(PointCloudsProcedure_dll_obj)

#===============================================================================
# SplineWispsProcedure.dll
SplineWispsProcedure_dll_obj = \
  ..\..\procedures\splinewisps_procedure\splinewisps_procedure.obj

SplineWispsProcedure_lib = $(out_dir)\SplineWispsProcedure.lib
SplineWispsProcedure_exp = $(out_dir)\SplineWispsProcedure.exp

$(SplineWispsProcedure_dll): $(SplineWispsProcedure_dll_obj)
	@echo SplineWispsProcedure.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\SplineWispsProcedure.def  libscene.lib $(SplineWispsProcedure_dll_obj)

#===============================================================================
# SurfaceWispsProcedure.dll
SurfaceWispsProcedure_dll_obj = \
  ..\..\procedures\surfacewisps_procedure\surfacewisps_procedure.obj

SurfaceWispsProcedure_lib = $(out_dir)\SurfaceWispsProcedure.lib
SurfaceWispsProcedure_exp = $(out_dir)\SurfaceWispsProcedure.exp

$(SurfaceWispsProcedure_dll): $(SurfaceWispsProcedure_dll_obj)
	@echo SurfaceWispsProcedure.dll
	@$(LD) $(LDFLAGS) /out:$@ /DLL /DEF:$(def_dir)\SurfaceWispsProcedure.def  libscene.lib $(SurfaceWispsProcedure_dll_obj)

#===============================================================================
# curvegen.exe
curvegen_exe_obj = \
  ..\..\tools\curve_generator\main.obj

$(curvegen_exe): $(curvegen_exe_obj)
	@echo curvegen.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(curvegen_exe_obj)

#===============================================================================
# fb2exr.exe
fb2exr_exe_obj = \
  ..\..\tools\fb2exr\main.obj

$(fb2exr_exe): $(fb2exr_exe_obj)
	@echo fb2exr.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib Half.lib Iex.lib IlmImf.lib IlmThread.lib Imath.lib zlibwapi.lib $(fb2exr_exe_obj)

#===============================================================================
# fbview.exe
fbview_exe_obj = \
  ..\..\tools\framebuffer_viewer\draw_image.obj \
  ..\..\tools\framebuffer_viewer\framebuffer_viewer.obj \
  ..\..\tools\framebuffer_viewer\glsl_shaders.obj \
  ..\..\tools\framebuffer_viewer\load_images.obj \
  ..\..\tools\framebuffer_viewer\main.obj

$(fbview_exe): $(fbview_exe_obj)
	@echo fbview.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(fbview_exe_obj)

#===============================================================================
# hdr2mip.exe
hdr2mip_exe_obj = \
  ..\..\tools\hdr2mip\main.obj \
  ..\..\tools\hdr2mip\rgbe.obj

$(hdr2mip_exe): $(hdr2mip_exe_obj)
	@echo hdr2mip.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(hdr2mip_exe_obj)

#===============================================================================
# jpg2mip.exe
jpg2mip_exe_obj = \
  ..\..\tools\jpg2mip\main.obj

$(jpg2mip_exe): $(jpg2mip_exe_obj)
	@echo jpg2mip.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib jpeg.lib $(jpg2mip_exe_obj)

#===============================================================================
# obj2mesh.exe
obj2mesh_exe_obj = \
  ..\..\tools\obj2mesh\ObjParser.obj \
  ..\..\tools\obj2mesh\main.obj

$(obj2mesh_exe): $(obj2mesh_exe_obj)
	@echo obj2mesh.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(obj2mesh_exe_obj)

#===============================================================================
# ply2mesh.exe
ply2mesh_exe_obj = \
  ..\..\tools\ply2mesh\main.obj \
  ..\..\tools\ply2mesh\plyfile.obj

$(ply2mesh_exe): $(ply2mesh_exe_obj)
	@echo ply2mesh.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(ply2mesh_exe_obj)

#===============================================================================
# ptcgen.exe
ptcgen_exe_obj = \
  ..\..\tools\point_cloud_generator\main.obj

$(ptcgen_exe): $(ptcgen_exe_obj)
	@echo ptcgen.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(ptcgen_exe_obj)

#===============================================================================
# scene.exe
scene_exe_obj = \
  ..\..\tools\scene_parser\command.obj \
  ..\..\tools\scene_parser\main.obj \
  ..\..\tools\scene_parser\parser.obj \
  ..\..\tools\scene_parser\table.obj

$(scene_exe): $(scene_exe_obj)
	@echo scene.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(scene_exe_obj)

#===============================================================================
# velgen.exe
velgen_exe_obj = \
  ..\..\tools\velocity_generator\velgen.obj

$(velgen_exe): $(velgen_exe_obj)
	@echo velgen.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(velgen_exe_obj)

#===============================================================================
# array_test.exe
array_test_exe_obj = \
  ..\..\tests\unit_test.obj \
  ..\..\tests\array_test.obj

$(array_test_exe): $(array_test_exe_obj)
	@echo array_test.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(array_test_exe_obj)

#===============================================================================
# box_test.exe
box_test_exe_obj = \
  ..\..\tests\unit_test.obj \
  ..\..\tests\box_test.obj

$(box_test_exe): $(box_test_exe_obj)
	@echo box_test.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(box_test_exe_obj)

#===============================================================================
# io_test.exe
io_test_exe_obj = \
  ..\..\tests\unit_test.obj \
  ..\..\tests\io_test.obj

$(io_test_exe): $(io_test_exe_obj)
	@echo io_test.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(io_test_exe_obj)

#===============================================================================
# numeric_test.exe
numeric_test_exe_obj = \
  ..\..\tests\unit_test.obj \
  ..\..\tests\numeric_test.obj

$(numeric_test_exe): $(numeric_test_exe_obj)
	@echo numeric_test.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(numeric_test_exe_obj)

#===============================================================================
# vector_test.exe
vector_test_exe_obj = \
  ..\..\tests\unit_test.obj \
  ..\..\tests\vector_test.obj

$(vector_test_exe): $(vector_test_exe_obj)
	@echo vector_test.exe
	@$(LD) $(LDFLAGS) /out:$@   libscene.lib $(vector_test_exe_obj)

#===============================================================================
# clean
clean:
	$(RM) $(libscene_dll)
	$(RM) $(libscene_dll_obj)
	$(RM) $(libscene_lib)
	$(RM) $(libscene_exp)
	$(RM) $(cube_exe)
	$(RM) $(cube_exe_obj)
	$(RM) $(ConstantShader_dll)
	$(RM) $(ConstantShader_dll_obj)
	$(RM) $(ConstantShader_lib)
	$(RM) $(ConstantShader_exp)
	$(RM) $(GlassShader_dll)
	$(RM) $(GlassShader_dll_obj)
	$(RM) $(GlassShader_lib)
	$(RM) $(GlassShader_exp)
	$(RM) $(HairShader_dll)
	$(RM) $(HairShader_dll_obj)
	$(RM) $(HairShader_lib)
	$(RM) $(HairShader_exp)
	$(RM) $(PlasticShader_dll)
	$(RM) $(PlasticShader_dll_obj)
	$(RM) $(PlasticShader_lib)
	$(RM) $(PlasticShader_exp)
	$(RM) $(SSSShader_dll)
	$(RM) $(SSSShader_dll_obj)
	$(RM) $(SSSShader_lib)
	$(RM) $(SSSShader_exp)
	$(RM) $(VolumeShader_dll)
	$(RM) $(VolumeShader_dll_obj)
	$(RM) $(VolumeShader_lib)
	$(RM) $(VolumeShader_exp)
	$(RM) $(PointCloudsProcedure_dll)
	$(RM) $(PointCloudsProcedure_dll_obj)
	$(RM) $(PointCloudsProcedure_lib)
	$(RM) $(PointCloudsProcedure_exp)
	$(RM) $(SplineWispsProcedure_dll)
	$(RM) $(SplineWispsProcedure_dll_obj)
	$(RM) $(SplineWispsProcedure_lib)
	$(RM) $(SplineWispsProcedure_exp)
	$(RM) $(SurfaceWispsProcedure_dll)
	$(RM) $(SurfaceWispsProcedure_dll_obj)
	$(RM) $(SurfaceWispsProcedure_lib)
	$(RM) $(SurfaceWispsProcedure_exp)
	$(RM) $(curvegen_exe)
	$(RM) $(curvegen_exe_obj)
	$(RM) $(fb2exr_exe)
	$(RM) $(fb2exr_exe_obj)
	$(RM) $(fbview_exe)
	$(RM) $(fbview_exe_obj)
	$(RM) $(hdr2mip_exe)
	$(RM) $(hdr2mip_exe_obj)
	$(RM) $(jpg2mip_exe)
	$(RM) $(jpg2mip_exe_obj)
	$(RM) $(obj2mesh_exe)
	$(RM) $(obj2mesh_exe_obj)
	$(RM) $(ply2mesh_exe)
	$(RM) $(ply2mesh_exe_obj)
	$(RM) $(ptcgen_exe)
	$(RM) $(ptcgen_exe_obj)
	$(RM) $(scene_exe)
	$(RM) $(scene_exe_obj)
	$(RM) $(velgen_exe)
	$(RM) $(velgen_exe_obj)
	$(RM) $(array_test_exe)
	$(RM) $(array_test_exe_obj)
	$(RM) $(box_test_exe)
	$(RM) $(box_test_exe_obj)
	$(RM) $(io_test_exe)
	$(RM) $(io_test_exe_obj)
	$(RM) $(numeric_test_exe)
	$(RM) $(numeric_test_exe_obj)
	$(RM) $(vector_test_exe)
	$(RM) $(vector_test_exe_obj)

